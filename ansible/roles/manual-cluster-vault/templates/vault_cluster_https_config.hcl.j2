cluster_name                = "{{ global_vault_cluster_name }}"
api_addr                    = "https://{{ ansible_default_ipv4.address }}:{{ global_vault_host_listening_port }}"
cluster_addr                = "https://{{ ansible_default_ipv4.address }}:{{ global_vault_cluster_port }}"
max_lease_ttl               = "768h"
default_lease_ttl           = "24h"
ui                          = true
disable_mlock               = true
raw_storage_endpoint        = true
disable_sealwrap            = true
disable_printable_check     = true

listener "tcp" {
  address                   = "{{ global_vault_host_listening_address }}:{{ global_vault_host_listening_port }}"
  tls_client_ca_file        = "{{ global_system_internal_dir_node_certificates }}/{{ global_system_internal_file_ca_certificate }}"
  tls_cert_file             = "{{ global_system_internal_dir_node_certificates }}/{{ inventory_hostname }}.crt.pem"
  tls_key_file              = "{{ global_system_internal_dir_node_certificates }}/{{ inventory_hostname }}.key.pem"
  tls_disable               = "false"
}

{% if global_vault_cluster_enable_raft %}
# Backend on Raft
storage "raft" {
  path                      = "{{ local_vault_manual_cluster_dir_data }}"
  node_id                   = "{{ inventory_hostname }}-node"

{% for host in groups[vault_cluster_inventory_group | default("vault_cluster")] %}
{% if host != inventory_hostname %}
  retry_join {
    leader_api_addr         = "https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ global_vault_host_listening_port }}"
    leader_ca_cert_file     = "{{ global_system_internal_dir_node_certificates }}/{{ global_system_internal_file_ca_certificate }}"
    leader_client_cert_file = "{{ global_system_internal_dir_node_certificates }}/{{ inventory_hostname }}.crt.pem"
    leader_client_key_file  = "{{ global_system_internal_dir_node_certificates }}/{{ inventory_hostname }}.key.pem"
  }
{% endif %}
{% endfor %}
}
{% endif %}

{% if global_vault_cluster_enable_consul %}
# Backend on Consul
storage "consul" {
  address                   = "{{ global_vault_cluster_enable_consul_client }}:{{ global_vault_cluster_enable_consul_https | ternary(global_consul_host_listening_https_port, global_consul_host_listening_http_port) }}"
  path                      = "{{ global_vault_cluster_enable_consul_path }}"
  scheme                    = "{{ global_vault_cluster_enable_consul_https | ternary('https', 'http') }}"
{% if global_vault_cluster_enable_consul_https %}
  tls_ca_file               = "{{ global_system_internal_dir_node_certificates }}/{{ external_consul_manual_cluster_file_ca_certificate }}"
  tls_cert_file             = "{{ global_system_internal_dir_node_certificates }}/{{ external_consul_manual_cluster_file_ca_node_value }}.crt.pem"
  tls_key_file              = "{{ global_system_internal_dir_node_certificates }}/{{ external_consul_manual_cluster_file_ca_node_value }}.key.pem"
  tls_skip_verify           = false
{% endif %}
}
{% endif %}

{% if global_vault_cluster_enable_transit %}
# Enable Transit
seal "transit" {
  address                   = "{{ global_vault_transit_backend_tls_skip_verify | ternary('http', 'https') }}://{{ global_vault_transit_backend_unseal_host }}:{{ global_vault_transit_backend_host_port }}"
  token                     = "{{ global_vault_transit_backend_token }}"
  key_name                  = "{{ global_vault_transit_backend_key_name }}"
  mount_path                = "{{ global_vault_transit_backend_mount_path }}"
  disable_renewal           = "{{ global_vault_transit_backend_disable_renewal | string | lower }}"
  tls_skip_verify           = "{{ global_vault_transit_backend_tls_skip_verify | string | lower }}"
}
{% else %}
# Disabled Transit
{% endif %}
