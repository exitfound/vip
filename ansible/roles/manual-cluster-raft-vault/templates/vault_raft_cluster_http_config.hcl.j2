cluster_name            = "{{ global_vault_raft_cluster_name }}"
api_addr                = "http://{{ ansible_default_ipv4.address }}:{{ global_vault_host_listening_port }}"
cluster_addr            = "http://{{ ansible_default_ipv4.address }}:{{ global_vault_raft_cluster_port }}"
max_lease_ttl           = "768h"
default_lease_ttl       = "24h"
ui                      = true
disable_mlock           = true
raw_storage_endpoint    = true
disable_sealwrap        = true
disable_printable_check = true

listener "tcp" {
  address               = "{{ global_vault_host_listening_address }}:{{ global_vault_host_listening_port }}"
  cluster_addr          = "{{ global_vault_host_listening_address }}:{{ global_vault_raft_cluster_port }}"
  tls_disable           = "true"
}

storage "raft" {
  path                  = "{{ local_vault_manual_raft_cluster_dir_raft }}"
  node_id               = "vault-{{ inventory_hostname }}-node"

{% for host in groups[global_vault_raft_cluster_inventory_group | default("vault")] %}
{% if host != inventory_hostname %}
  retry_join {
    leader_api_addr     = "http://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:{{ global_vault_host_listening_port }}"
  }
{% endif %}
{% endfor %}
}

{% if global_vault_raft_cluster_enable_transit %}
# Enable Transit
seal "transit" {
  address               = "{{ global_vault_transit_backend_tls_skip_verify | ternary('http', 'https') }}://{{ global_vault_transit_backend_unseal_host }}:{{ global_vault_transit_backend_host_port }}"
  token                 = "{{ global_vault_transit_backend_token }}"
  key_name              = "{{ global_vault_transit_backend_key_name }}"
  mount_path            = "{{ global_vault_transit_backend_mount_path }}"
  disable_renewal       = "{{ global_vault_transit_backend_disable_renewal | string | lower }}"
  tls_skip_verify       = "{{ global_vault_transit_backend_tls_skip_verify | string | lower }}"
}
{% else %}
# Disable Transit
{% endif %}
