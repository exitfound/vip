---
# Вызов предварительной роли system-prepare для полноценного запуска текущей:
- name: Import system-prepare role for running current role on Debian family distro
  import_role:
    name: system-prepare
    tasks_from: main

# Вызов предварительной роли system-docker для полноценного запуска текущей:
- name: Import system-docker role for running current role on Debian family distro
  import_role:
    name: system-docker
    tasks_from: main

# Создание нескольких директорий для последующей работы с Vault:
- name: Create Vault directories on Debian family distro
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ local_vault_docker_dir_mode }}"
    owner: "1000"
    group: "1000"
  loop:
    - {path: "{{ local_vault_docker_dir_main }}"}
    - {path: "{{ local_vault_docker_dir_data }}"}
    - {path: "{{ local_vault_docker_dir_config }}"}

# Копирование конфигурационных файлов из директории templates и их последующая передача в рабочие директории Vault:
- name: Copy config files in directories on Debian family distro
  template:
    src: "templates/{{ item.file }}.j2"
    dest: "{{ item.path }}/{{ item.file }}"
    mode: "{{ local_vault_docker_file_mode }}"
    owner: "1000"
    group: "1000"
  loop:
    - {path: "{{ local_vault_docker_dir_main }}", file: "{{ local_vault_docker_file_composefile }}"}
    - {path: "{{ local_vault_docker_dir_main }}", file: "{{ local_vault_docker_file_dockerfile }}"}
    - {path: "{{ local_vault_docker_dir_config }}", file: "{{ local_vault_docker_file_config }}"}

# Запуск Vault с помощью Docker Compose на удаленном узле:
- name: Run Vault via Docker Compose on Debian family distro
  community.docker.docker_compose_v2:
    project_src: "{{ local_vault_docker_dir_main }}"
    files: "{{ local_vault_docker_file_composefile }}"
    build: "always"
    recreate: "always"
    state: "present"
  register: docker_compose_output
  changed_when: false

# Проверка состояния контейнера Vault после его запуска на удаленном узле:
- name: Verify that Vault service are running on Debian family distro
  ansible.builtin.assert:
    that:
      - vault_container.State == 'running'
    fail_msg: >-
      Vault container is not running! Current state: {{
        docker_compose_output.containers
        | selectattr("Service", "equalto", "vault")
        | first
        | default({})
        | dict2items
        | selectattr('key', 'equalto', 'State')
        | map(attribute='value')
        | first
        | default('unknown')
      }}
    success_msg: >-
      Vault container is running and healthy
  vars:
    vault_container: >-
      {{ docker_compose_output.containers
         | selectattr("Service", "equalto", "vault")
         | selectattr("State", "equalto", "running")
         | first }}
